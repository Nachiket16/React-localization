{"ast":null,"code":"var _jsxFileName = \"/home/mintifi/Nachiket/GITHUB/React-localization/localization/src/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from \"i18next-http-backend\";\nimport 'bootstrap/dist/js/bootstrap.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./index.css\";\n// import App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n.use(LanguageDetector).use(HttpApi).init({\n  fallbackLng: \"en\",\n  detection: {\n    order: ['cookie', 'htmlTag', 'localStorage', 'sessionStorage', 'navigator', 'path', 'subdomain'],\n    caches: ['cookie']\n  },\n  backend: {\n    loadPath: '/assets/{{lng}}/translation.json'\n  },\n  react: {\n    useSuspense: false\n  }\n});\nfunction App() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: t(\"Welcome to React\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","i18n","useTranslation","initReactI18next","LanguageDetector","HttpApi","jsxDEV","_jsxDEV","use","init","fallbackLng","detection","order","caches","backend","loadPath","react","useSuspense","App","_s","t","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["/home/mintifi/Nachiket/GITHUB/React-localization/localization/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport HttpApi from \"i18next-http-backend\";\nimport 'bootstrap/dist/js/bootstrap.js'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport \"./index.css\";\n// import App from \"./App\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector)\n  .use(HttpApi)\n  .init({\n\n\n\n    fallbackLng: \"en\",\n    detection: {\n      order: ['cookie','htmlTag',  'localStorage', 'sessionStorage', 'navigator', 'path', 'subdomain'],\n      caches: ['cookie'],\n    },\n    backend:{\n       loadPath: '/assets/{{lng}}/translation.json'\n    },\n    react: { useSuspense: false}\n  });\n\nfunction App() {\n  const { t } = useTranslation();\n\n  return <h2>{t(\"Welcome to React\")}</h2>;\n}\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,SAAS;AAC1B,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,eAAe;AAChE,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,gCAAgC;AACvC,OAAO,kCAAkC;AAEzC,OAAO,aAAa;AACpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEAN,IAAI,CACDO,GAAG,CAACL,gBAAgB,CAAC,CAAC;AAAA,CACtBK,GAAG,CAACJ,gBAAgB,CAAC,CACrBI,GAAG,CAACH,OAAO,CAAC,CACZI,IAAI,CAAC;EAIJC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAE;IACTC,KAAK,EAAE,CAAC,QAAQ,EAAC,SAAS,EAAG,cAAc,EAAE,gBAAgB,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC;IAChGC,MAAM,EAAE,CAAC,QAAQ;EACnB,CAAC;EACDC,OAAO,EAAC;IACLC,QAAQ,EAAE;EACb,CAAC;EACDC,KAAK,EAAE;IAAEC,WAAW,EAAE;EAAK;AAC7B,CAAC,CAAC;AAEJ,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC;EAAE,CAAC,GAAGlB,cAAc,CAAC,CAAC;EAE9B,oBAAOK,OAAA;IAAAc,QAAA,EAAKD,CAAC,CAAC,kBAAkB;EAAC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACzC;AAACN,EAAA,CAJQD,GAAG;EAAA,QACIhB,cAAc;AAAA;AAAAwB,EAAA,GADrBR,GAAG;AAMZ,MAAMS,IAAI,GAAG5B,QAAQ,CAAC6B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTxB,OAAA,CAACT,KAAK,CAACkC,UAAU;EAAAX,QAAA,eACfd,OAAA,CAACW,GAAG;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACAzB,eAAe,CAAC,CAAC;AAAC,IAAA0B,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}